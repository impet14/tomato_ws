<launch> 
<group ns='LArm'>
    <node name="dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">
        <rosparam>
            namespace: dxl_manager
            serial_ports:
                conbe_L_port:
                    port_name: "/dev/ttyUSB0"
                    baud_rate: 1000000
                    min_motor_id: 10
                    max_motor_id: 17
                    update_rate: 200
        </rosparam>
    </node>
	<!--[2]  start joint state publisher-->
    <param name="robot_description"
    	command="$(find xacro)/xacro --inorder '$(find rrbot_description)/urdf/conbeL.xacro'" />

	<!-- [3] state publisher of L-->
	<node name="State_Publisher" pkg="conbe" type="state_publisherL.py" /> 

	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
		respawn="false" output="screen">
	</node>

	<!--[4-1] start meta controller       -->
	<rosparam file="$(find conbe)/config/jointsL.yaml" command="load"/>
	<node name="controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
		args="--manager=dxl_manager
				--port=conbe_L_port
				joint0_controller                       
				joint1_controller                                 
				joint2_controller                       
				joint3_controller
				joint4_controller                       
				joint5_controller
				joint6_controller                       
				"
		output="screen"/>
	<!--[4-2] Start joints trajectory controller controller -->
	<rosparam file="$(find conbe)/config/joints_trajectory_controllerL.yaml" command="load"/>
	<node name="controller_spawner_meta" pkg="dynamixel_controllers" type="controller_spawner.py"
		args="--manager=dxl_manager
				--type=meta
				conbeL_controller
				joint0_controller                       
				joint1_controller                                           
				joint2_controller                       
				joint3_controller
				joint4_controller                       
				joint5_controller
			"
		output="screen"/>

</group>

<group ns='RArm'>
    <node name="dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" required="true" output="screen">
        <rosparam>
            namespace: dxl_manager
            serial_ports:
                conbe_R_port:
                    port_name: "/dev/ttyUSB1"
                    baud_rate: 1000000
                    min_motor_id: 10
                    max_motor_id: 17
                    update_rate: 200
        </rosparam>
    </node>
	<!--[2]  start joint state publisher-->
    <param name="robot_description"
    	command="$(find xacro)/xacro --inorder '$(find rrbot_description)/urdf/conbeR.xacro'" />

	<!-- [3-1] state publisher of R-->
	<node name="State_Publisher" pkg="conbe" type="state_publisherR.py" /> 

	<!-- [3-2] convert joint states to TF transforms for rviz, etc -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
		respawn="false" output="screen">
	</node>

	<!--[4-1] start meta controller       -->
	<rosparam file="$(find conbe)/config/jointsR.yaml" command="load"/>
	<node name="controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
		args="--manager=dxl_manager
				--port=conbe_R_port
				joint0_controller                       
				joint1_controller                                 
				joint2_controller                       
				joint3_controller
				joint4_controller                       
				joint5_controller
				joint6_controller                       
				"
		output="screen"/>
	<!--[4-2] Start joints trajectory controller controller -->
	<rosparam file="$(find conbe)/config/joints_trajectory_controllerR.yaml" command="load"/>
	<node name="controller_spawner_meta" pkg="dynamixel_controllers" type="controller_spawner.py"
		args="--manager=dxl_manager
				--type=meta
				conbeR_controller
				joint0_controller                       
				joint1_controller                                           
				joint2_controller                       
				joint3_controller
				joint4_controller                       
				joint5_controller
			"
		output="screen"/>

</group>

<node pkg="tf" type="static_transform_publisher" name="link1_broadcaster" args="-0.398 -0.324 0.431 0 0 0 /world /camera_link 100" />
	
	
<!--[5]  connect arduino as a node-->
<!-- <include file="$(find rosserial_python)/launch/serial_node.launch" /> -->

</launch>